version: "3.1"
services:

  rabbit:
    image: rabbitmq:3-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 40s
      timeout: 10s
      retries: 5
    ports:
      - "5673:5672"
      - "15673:15672"

  db:
    image: library/postgres:latest
    restart: always
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      timeout: 3s
      interval: 3s
      retries: 88
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/pgsql/1
      - TZ=Europe/Moscow


  purchases:
    image: inozpavel/purchases
    restart: always
    environment:
      - JWT_KEY=RTUITLAbSecretKey123 # Minimum 16 symbols!!!
      - TOKEN_SECONDS_LIFETIME=3600
      - DB_CONNECTION_STRING=Host=db;Port=5432;Database=Purchases;Username=postgres;Password=postgres
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - TZ=Europe/Moscow
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "8000:80"
    depends_on:
      rabbit:
        condition: service_healthy
      db:
        condition: service_healthy


  stores:
    image: inozpavel/stores
    restart: always
    environment:
      - JWT_KEY=RTUITLAbSecretKey123 # Minimum 16 symbols!!!
      - DB_CONNECTION_STRING=Host=db;Port=5432;Database=Stores;Username=postgres;Password=postgres
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - TZ=Europe/Moscow
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "8001:80"
    depends_on:
      rabbit:
        condition: service_healthy
      db:
        condition: service_healthy
  